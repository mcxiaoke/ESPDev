C51 COMPILER V9.56.0.0   DEMO                                                              07/25/2017 09:18:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEMO
OBJECT MODULE PLACED IN .\Objects\demo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE demo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\demo
                    -.lst) TABS(2) OBJECT(.\Objects\demo.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          #include<stdio.h>
   4          #include<string.h>
   5          #include "debug.h"
   6          
   7          // modifed http://blog.csdn.net/wqx521/article/details/50801547
   8          #define DS1307_CTRL_ID 0x68
   9          #define DS1307_EEPROM 0xD0
  10          #define uint8_t unsigned char
  11          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}
  12          sbit I2C_SCL = P0 ^ 6;
  13          sbit I2C_SDA = P0 ^ 7;
  14          
  15          // Convert Decimal to Binary Coded Decimal (BCD)
  16          uint8_t dec2bcd(uint8_t num)
  17          {
  18   1        return ((num/10 * 16) + (num % 10));
  19   1      }
  20          
  21          // Convert Binary Coded Decimal (BCD) to Decimal
  22          uint8_t bcd2dec(uint8_t num)
  23          {
  24   1        return ((num/16 * 10) + (num % 16));
  25   1      }
  26          
  27          void I2CInit()
  28          {
  29   1        I2C_SDA = 1; //确保SDA、SCL都是高电平
  30   1        I2C_SCL = 1;
  31   1      }
  32          
  33          /* 产生总线起始信号 */
  34          void I2CStart()
  35          {
  36   1        I2C_SDA = 1; //首先确保SDA、SCL都是高电平
  37   1        I2C_SCL = 1;
  38   1        I2CDelay();
  39   1        I2C_SDA = 0; //先拉低SDA
  40   1        I2CDelay();
  41   1        I2C_SCL = 0; //再拉低SCL
  42   1      }
  43          /* 产生总线停止信号 */
  44          void I2CStop()
  45          {
  46   1        I2C_SCL = 0; //首先确保SDA、SCL都是低电平
  47   1        I2C_SDA = 0;
  48   1        I2CDelay();
  49   1        I2C_SCL = 1; //先拉高SCL
  50   1        I2CDelay();
  51   1        I2C_SDA = 1; //再拉高SDA
  52   1        I2CDelay();
  53   1      }
  54          /* I2C总线写操作，dat-待写入字节，返回值-从机应答位的值 */
C51 COMPILER V9.56.0.0   DEMO                                                              07/25/2017 09:18:34 PAGE 2   

  55          bit I2CWrite(unsigned char dat)
  56          {
  57   1        bit ack; //用于暂存应答位的值
  58   1        unsigned char mask;  //用于探测字节内某一位值的掩码变量
  59   1      
  60   1        for (mask = 0x80; mask != 0; mask >>= 1) //从高位到低位依次进行
  61   1        {
  62   2          if ((mask & dat) == 0) //该位的值输出到SDA上
  63   2          {
  64   3            I2C_SDA = 0;
  65   3          }
  66   2          else
  67   2          {
  68   3            I2C_SDA = 1;
  69   3          }
  70   2          I2CDelay();
  71   2          I2C_SCL = 1;          //拉高SCL
  72   2          I2CDelay();
  73   2          I2C_SCL = 0;          //再拉低SCL，完成一个位周期
  74   2        }
  75   1        I2C_SDA = 1;   //8位数据发送完后，主机释放SDA，以检测从机应答
  76   1        I2CDelay();
  77   1        I2C_SCL = 1;   //拉高SCL
  78   1        ack = I2C_SDA; //读取此时的SDA值，即为从机的应答值
  79   1        I2CDelay();
  80   1        I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
  81   1      
  82   1        return (~ack); //应答值取反以符合通常的逻辑：
  83   1        //0=不存在或忙或写入失败，1=存在且空闲或写入成功
  84   1      }
  85          /* I2C总线读操作，并发送非应答信号，返回值-读到的字节 */
  86          unsigned char I2CReadNAK()
  87          {
  88   1        unsigned char mask;
  89   1        unsigned char dat;
  90   1      
  91   1        I2C_SDA = 1;  //首先确保主机释放SDA
  92   1        for (mask = 0x80; mask != 0; mask >>= 1) //从高位到低位依次进行
  93   1        {
  94   2          I2CDelay();
  95   2          I2C_SCL = 1;      //拉高SCL
  96   2          if(I2C_SDA == 0)  //读取SDA的值
  97   2          {
  98   3            dat &= ~mask;  //为0时，dat中对应位清零
  99   3          }
 100   2          else
 101   2          {
 102   3            dat |= mask;  //为1时，dat中对应位置1
 103   3          }
 104   2          I2CDelay();
 105   2          I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
 106   2        }
 107   1        I2C_SDA = 1;   //8位数据发送完后，拉高SDA，发送非应答信号
 108   1        I2CDelay();
 109   1        I2C_SCL = 1;   //拉高SCL
 110   1        I2CDelay();
 111   1        I2C_SCL = 0;   //再拉低SCL完成非应答位，并保持住总线
 112   1      
 113   1        return dat;
 114   1      }
 115          /* I2C总线读操作，并发送应答信号，返回值-读到的字节 */
 116          unsigned char I2CReadACK()
C51 COMPILER V9.56.0.0   DEMO                                                              07/25/2017 09:18:34 PAGE 3   

 117          {
 118   1        unsigned char mask;
 119   1        unsigned char dat;
 120   1      
 121   1        I2C_SDA = 1;  //首先确保主机释放SDA
 122   1        for (mask = 0x80; mask != 0; mask >>= 1) //从高位到低位依次进行
 123   1        {
 124   2          I2CDelay();
 125   2          I2C_SCL = 1;      //拉高SCL
 126   2          if(I2C_SDA == 0)  //读取SDA的值
 127   2          {
 128   3            dat &= ~mask;  //为0时，dat中对应位清零
 129   3          }
 130   2          else
 131   2          {
 132   3            dat |= mask;  //为1时，dat中对应位置1
 133   3          }
 134   2          I2CDelay();
 135   2          I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
 136   2        }
 137   1        I2C_SDA = 0;   //8位数据发送完后，拉低SDA，发送应答信号
 138   1        I2CDelay();
 139   1        I2C_SCL = 1;   //拉高SCL
 140   1        I2CDelay();
 141   1        I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
 142   1      
 143   1        return dat;
 144   1      }
 145          
 146          /* 读取函数，buf-数据接收指针，addr-E2中的起始地址，len-读取长度 */
 147          void DS1307Read(unsigned char *buf, unsigned char addr, unsigned char len)
 148          {
 149   1        do                         //用寻址操作查询当前是否可进行读写操作
 150   1        {
 151   2          I2CStart();
 152   2          if(I2CWrite(DS1307_EEPROM << 1)) //应答则跳出循环，非应答则进行下一次查询
 153   2          {
 154   3            break;
 155   3          }
 156   2          I2CStop();
 157   2        }
 158   1        while(1);
 159   1        I2CWrite(addr);            //写入起始地址
 160   1        I2CStart();                //发送重复启动信号
 161   1        I2CWrite((DS1307_EEPROM << 1) | 0x01); //寻址器件，后续为读操作
 162   1        while (len > 1)           //连续读取len-1个字节
 163   1        {
 164   2          *buf++ = I2CReadACK(); //最后字节之前为读取操作+应答
 165   2          len--;
 166   2        }
 167   1        *buf = I2CReadNAK();      //最后一个字节为读取操作+非应答
 168   1        I2CStop();
 169   1      }
 170          /* 写入函数，buf-源数据指针，addr-E2中的起始地址，len-写入长度 */
 171          void DS1307Write(unsigned char *buf, unsigned char addr, unsigned char len)
 172          {
 173   1        while (len > 0)
 174   1        {
 175   2          //等待上次写入操作完成
 176   2          do                        //用寻址操作查询当前是否可进行读写操作
 177   2          {
 178   3            I2CStart();
C51 COMPILER V9.56.0.0   DEMO                                                              07/25/2017 09:18:34 PAGE 4   

 179   3            if(I2CWrite(DS1307_EEPROM << 1)) //应答则跳出循环，非应答则进行下一次查询
 180   3            {
 181   4              break;
 182   4            }
 183   3            I2CStop();
 184   3          }
 185   2          while(1);
 186   2          //按页写模式连续写入字节
 187   2          I2CWrite(addr);           //写入起始地址
 188   2          while(len > 0)
 189   2          {
 190   3            I2CWrite(*buf++);     //写入一个字节数据
 191   3            len--;                //待写入长度计数递减
 192   3            addr++;               //E2地址递增
 193   3            if ((addr & 0x07) == 0) //检查地址是否到达页边界，24C02每页8字节，
 194   3            {
 195   4              //所以检测低3位是否为零即可
 196   4              break;            //到达页边界时，跳出循环，结束本次写操作
 197   4            }
 198   3          }
 199   2          I2CStop();
 200   2        }
 201   1      }
 202          
 203          void delay_1s()
 204          {
 205   1          unsigned int i, j, k;
 206   1          for (i = 88; i > 0; i--)
 207   1              for (j = 71; j > 0; j--)
 208   1                  for (k = 40; k > 0; k--)
 209   1                      ;
 210   1      }
 211          
 212          void main()
 213          {  
 214   1          uint8_t str[32];
 215   1          uint8_t buf[7];
 216   1        uint8_t a[7];
 217   1        uint8_t i;
 218   1        for(i=0;i<8;i++){
 219   2          a[i] = 0x05;
 220   2        }
 221   1          
 222   1          dInit();
 223   1      
 224   1          while(1){
 225   2            memset(str,0,sizeof(str));
 226   2            memset(buf,0,sizeof(buf));
 227   2            DS1307Read(buf,DS1307_CTRL_ID,7);
 228   2            
 229   2            sprintf(str,"%x %x %x %x %x %x %x\n", (int)buf[0],(int)buf[1],(int)buf[2],
 230   2            (int)buf[3], (int)buf[4], (int)buf[5],(int)buf[6]);
 231   2            //dLog(str);
 232   2            //dLogU(a,7);
 233   2            dLogU(buf,7);
 234   2            delay_1s();
 235   2          }
 236   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    567    ----
C51 COMPILER V9.56.0.0   DEMO                                                              07/25/2017 09:18:34 PAGE 5   

   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      56
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
