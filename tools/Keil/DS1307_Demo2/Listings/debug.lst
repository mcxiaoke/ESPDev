C51 COMPILER V9.56.0.0   DEBUG                                                             07/25/2017 16:37:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\debug.obj
COMPILER INVOKED BY: C:\Keil\ARM\C51\BIN\C51.EXE debug.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\de
                    -bug.lst) OBJECT(.\Objects\debug.obj)

line level    source

   1          #include <reg51.h>
   2          #include "debug.h"
   3          
   4          void UART_Init()
   5          {
   6   1          SCON = 0x50; /* uart in mode 1 (8 bit), REN=1 */
   7   1          TMOD = TMOD | 0x20; /* Timer 1 in mode 2 */
   8   1          TH1 = 0xFD; /* 9600 Bds at 11.059MHz */
   9   1          TL1 = 0xFD; /* 9600 Bds at 11.059MHz */
  10   1          ES = 1; /* Enable serial interrupt */
  11   1          EA = 1; /* Enable global interrupt */
  12   1          TR1 = 1; /* Timer 1 run */
  13   1      }
  14          
  15          void UART_TxChar(char ch)
  16          {
  17   1          SBUF = ch; // Load the data to be transmitted
  18   1          while (TI == 0)
  19   1              ; // Wait till the data is trasmitted
  20   1          TI = 0; //Clear the Tx flag for next cycle.
  21   1      }
  22          
  23          char UART_RxChar(void)
  24          {
  25   1          while (RI == 0)
  26   1              ; // Wait till the data is received
  27   1          RI = 0; // Clear Receive Interrupt Flag for next cycle
  28   1          return (SBUF); // return the received char
  29   1      }
  30          
  31          void UART_TxString(char* ptr_string)
  32          {
  33   1          while (*ptr_string)
  34   1              UART_TxChar(*ptr_string++); // Loop through the string and transmit char by char
  35   1      }
  36          
  37          unsigned char UART_RxString(char* ptr_string)
  38          {
  39   1          char ch;
  40   1          unsigned char len = 0;
  41   1          while (1) {
  42   2              ch = UART_RxChar(); //Receive a char
  43   2              UART_TxChar(ch); //Echo back the received char
  44   2      
  45   2              if ((ch == '\r') || (ch == '\n')) //read till enter key is pressed
  46   2              { //once enter key is pressed null terminate the string
  47   3                  ptr_string[len] = 0; //and break the loop
  48   3                  break;
  49   3              } else if ((ch == '\b') && (len != 0)) {
  50   3                  len--; //If backspace is pressed then decrement the index to remove the old char
  51   3              } else {
  52   3                  ptr_string[len] = ch; //copy the char into string and increment the index
  53   3                  len++;
  54   3              }
C51 COMPILER V9.56.0.0   DEBUG                                                             07/25/2017 16:37:04 PAGE 2   

  55   2          }
  56   1          return len;
  57   1      }
  58          
  59          void UART_TxUChar(unsigned char ch)
  60          {
  61   1          SBUF = ch; // Load the data to be transmitted
  62   1          while (TI == 0)
  63   1              ; // Wait till the data is trasmitted
  64   1          TI = 0; //Clear the Tx flag for next cycle.
  65   1      }
  66          
  67          unsigned char UART_RxUChar(void)
  68          {
  69   1          while (RI == 0)
  70   1              ; // Wait till the data is received
  71   1          RI = 0; // Clear Receive Interrupt Flag for next cycle
  72   1          return (SBUF); // return the received char
  73   1      }
  74          
  75          void UART_TxUString(unsigned char* u_array, int len)
  76          {
  77   1          int i;
  78   1          for(i = 0;i< len;i++){
  79   2              UART_TxUChar(u_array[i]);
  80   2          }
  81   1      }
  82          
  83          void dInit()
  84          {
  85   1          UART_Init();
  86   1      }
  87          
  88          void dLog(char* ptr_string)
  89          {
  90   1          UART_TxString(ptr_string);
  91   1      }
  92          
  93          void dLogU(unsigned char* u_array, int len)
  94          {
  95   1          UART_TxUString(u_array, len);
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
