C51 COMPILER V9.56.0.0   LCD1602                                                           08/06/2017 10:37:56 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: C:\Keil\ARM\C51\BIN\C51.EXE lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -lcd1602.lst) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          
   3          static void delay_us(int i)
   4          {
   5   1          while(i-->0);
   6   1      }
   7          static void delay_ms(int i)
   8          {
   9   1          int k;
  10   1          for(;i>0;i--)
  11   1              for(k=110;k>0;k--);
  12   1      }
  13          
  14          static bit is_busy()
  15          {
  16   1          DB = 0xFF;
  17   1          RS = 0;
  18   1          RW = 1;
  19   1          EN = 0;
  20   1          EN = 1;
  21   1          delay_us(10);
  22   1          return (bit) (DB & 0x80);//BF7
  23   1      }
  24          
  25          void lcd_write_command(unsigned char cmd)
  26          {
  27   1          lcd_busy_wait();
  28   1          // H:Data, L:Command
  29   1          RS = 0; // select command register
  30   1          delay_us(10);
  31   1          // H:Read, L:Write
  32   1          RW = 0; // select write operation
  33   1          delay_us(10);
  34   1          // data strobe, active High
  35   1          DB = cmd; // send command to lcd
  36   1          EN = 1; // begin write circle
  37   1          delay_us(100); // pause for lcd reading
  38   1          EN = 0; // finish write circle
  39   1          delay_us(10);
  40   1      }    
  41          
  42          void lcd_write_data(unsigned char dat)
  43          {
  44   1          lcd_busy_wait();
  45   1          // H:Data, L:Command
  46   1          RS = 1; // select data register
  47   1          delay_us(10);
  48   1          // H:Read, L:Write
  49   1          RW = 0; // select write operation
  50   1          delay_us(10);
  51   1          // data strobe, active High
  52   1          DB = dat; // send data to lcd
  53   1          EN = 1; // begin write circle
  54   1          delay_us(20); // pause for lcd reading
C51 COMPILER V9.56.0.0   LCD1602                                                           08/06/2017 10:37:56 PAGE 2   

  55   1          EN = 0; // finish write circle
  56   1          delay_us(10);
  57   1      }
  58          
  59          
  60          
  61          void lcd_busy_wait()
  62          {
  63   1          while(is_busy());
  64   1      }
  65          
  66          void lcd_init()
  67          {
  68   1          // =0x38
  69   1          lcd_write_command(LCD_FUNCTIONSET|LCD_8BITMODE|LCD_2LINE|LCD_5x8DOTS);
  70   1          // 0x06
  71   1          lcd_write_command(LCD_ENTRYMODESET|LCD_ENTRYLEFT|LCD_ENTRYSHIFTDECREMENT);
  72   1          // = 0x0e
  73   1          lcd_write_command(LCD_DISPLAYCONTROL|LCD_DISPLAYON|LCD_CURSOROFF|LCD_BLINKOFF);
  74   1          //0x01
  75   1          lcd_write_command(LCD_CLEARDISPLAY);
  76   1      }
  77          
  78          
  79          // row:1,2 col:0-15
  80          void lcd_set_cursor(unsigned char row, unsigned char col)
  81          {
  82   1          if(row == 0){
  83   2              lcd_write_command(LCD_SETDDRAMADDR | col);
  84   2          }else{
  85   2              lcd_write_command(LCD_SETDDRAMADDR | (0x40+col));
  86   2          }
  87   1      }
  88          
  89          void lcd_display_string(unsigned char row, unsigned char col, unsigned char *str)
  90          {
  91   1          lcd_set_cursor(row, col);
  92   1          while(*str){
  93   2              lcd_write_data(*str++);
  94   2          }
  95   1      }
  96          
  97          void lcd_clear_display()
  98          {
  99   1          lcd_write_command(LCD_CLEARDISPLAY);
 100   1          delay_us(20);
 101   1      }
 102          
 103          void lcd_cursor_home()
 104          {
 105   1          lcd_write_command(LCD_RETURNHOME);
 106   1      }
 107          
 108          void lcd_move_right(unsigned char count)
 109          {
 110   1          while(count-->0){
 111   2              lcd_write_command(LCD_CURSORSHIFT|LCD_DISPLAYMOVE|LCD_MOVERIGHT);
 112   2              delay_ms(50);
 113   2          }
 114   1      }
 115          
 116          void lcd_move_left(unsigned char count)
C51 COMPILER V9.56.0.0   LCD1602                                                           08/06/2017 10:37:56 PAGE 3   

 117          {
 118   1          while(count-->0){
 119   2              lcd_write_command(LCD_CURSORSHIFT|LCD_DISPLAYMOVE|LCD_MOVELEFT);
 120   2              delay_ms(50);
 121   2          }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
