C51 COMPILER V9.56.0.0   LEDX4                                                             07/23/2017 09:59:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LEDX4
OBJECT MODULE PLACED IN .\Objects\ledx4.obj
COMPILER INVOKED BY: C:\Keil\ARM\C51\BIN\C51.EXE ledx4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\le
                    -dx4.lst) TABS(2) OBJECT(.\Objects\ledx4.obj)

line level    source

   1          #include "7seg.h"
   2          #include "debug.h"
   3          #include "rtc.h"
   4          #include <reg51.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          
   8          // https://exploreembedded.com/wiki/8051_Family_C_Library
   9          // for STC89C52RC
  10          
  11          // upside l->r
  12          sbit k1 = P1 ^ 5; //1 12
  13          sbit SA = P1 ^ 4; //a 11
  14          sbit SF = P1 ^ 3; //f 10
  15          sbit k2 = P1 ^ 2; //2 9
  16          sbit k3 = P1 ^ 1; //3 8
  17          sbit SB = P1 ^ 0; //b 7
  18          
  19          // downside l->r
  20          sbit SE = P2 ^ 0; //e 1
  21          sbit SD = P2 ^ 1; //d 2
  22          sbit SZ = P2 ^ 2; //dp 3
  23          sbit SC = P2 ^ 3; //c 4
  24          sbit SG = P2 ^ 4; //g 5
  25          sbit k4 = P2 ^ 5; //4 6
  26          
  27          unsigned int num;
  28          unsigned int seconds = 9753;
  29          unsigned int temp, d1, d2, d3, d4;
  30          
  31          void delay_1s()
  32          {
  33   1          unsigned int i, j, k;
  34   1          for (i = 98; i > 0; i--)
  35   1              for (j = 101; j > 0; j--)
  36   1                  for (k = 49; k > 0; k--)
  37   1                      ;
  38   1      }
  39          
  40          void turn_off()
  41          {
  42   1          k1 = k2 = k3 = k4 = 1;
  43   1      }
  44          
  45          void T0_timer() interrupt 1
  46          {
  47   1          TH0 = (65536 - 45872) / 256;
  48   1          TL0 = (65536 - 45872) % 256;
  49   1          // 10ms * 100 = 1sec
  50   1          num++;
  51   1          if (num == 100) {
  52   2              num = 0;
  53   2              seconds++;
  54   2          }
C51 COMPILER V9.56.0.0   LEDX4                                                             07/23/2017 09:59:33 PAGE 2   

  55   1      }
  56          
  57          void show_num(unsigned char num)
  58          {
  59   1          unsigned char c = CATHODE[num];
  60   1          SA = (c >> 0) & 0x01;
  61   1          SB = (c >> 1) & 0x01;
  62   1          SC = (c >> 2) & 0x01;
  63   1          SD = (c >> 3) & 0x01;
  64   1          SE = (c >> 4) & 0x01;
  65   1          SF = (c >> 5) & 0x01;
  66   1          SG = (c >> 6) & 0x01;
  67   1          SZ = (c >> 7) & 0x01;
  68   1      }
  69          
  70          void delay(unsigned int z)
  71          {
  72   1          unsigned int i, j;
  73   1          for (i = z; i > 0; i--)
  74   1              for (j = 110; j > 0; j--)
  75   1                  ;
  76   1      }
  77          
  78          void update_led()
  79          {
  80   1          temp = seconds;
  81   1          if (temp > 9999) {
  82   2              temp = temp % 1000;
  83   2          }
  84   1          d1 = temp / 1000;
  85   1          temp = temp % 1000;
  86   1          d2 = temp / 100;
  87   1          temp = temp % 100;
  88   1          d3 = temp / 10;
  89   1          temp = temp % 10;
  90   1          d4 = temp;
  91   1          turn_off();
  92   1          k1 = 0;
  93   1          show_num(d1);
  94   1          delay(5);
  95   1          turn_off();
  96   1          k2 = 0;
  97   1          show_num(d2);
  98   1          delay(5);
  99   1          turn_off();
 100   1          k3 = 0;
 101   1          show_num(d3);
 102   1          delay(5);
 103   1          turn_off();
 104   1          k4 = 0;
 105   1          show_num(d4);
 106   1          delay(5);
 107   1      }
 108          
 109          uint8_t bcd_decimal(uint8_t hex)
 110          {
 111   1          return (uint8_t)((hex & 0xF0) >> 4) * 10 + (hex & 0x0F);
 112   1      }
 113          
 114          int year, month, day;
 115          int hour, min, sec;
 116          char idata buf[32];
C51 COMPILER V9.56.0.0   LEDX4                                                             07/23/2017 09:59:33 PAGE 3   

 117          int n;
 118          void read_time()
 119          {
 120   1          rtc_t rtc;
 121   1          RTC_Init();
 122   1          // rtc.hour = 0x09; //  09/30/00
 123   1          // rtc.min =  0x58;
 124   1          // rtc.sec =  0x00;
 125   1          // rtc.date = 0x23; // 2017/07/23
 126   1          // rtc.month = 0x07;
 127   1          // rtc.year = 0x17;
 128   1          // rtc.weekDay = 5;
 129   1          // RTC_SetDateTime(&rtc);
 130   1          delay_1s();
 131   1          RTC_GetDateTime(&rtc);
 132   1          year = bcd_decimal(rtc.year);
 133   1          month = bcd_decimal(rtc.month);
 134   1          day = bcd_decimal(rtc.date);
 135   1          hour = bcd_decimal(rtc.hour);
 136   1          min = bcd_decimal(rtc.min);
 137   1          sec = bcd_decimal(rtc.sec);
 138   1          delay_1s();
 139   1          n = sprintf(buf, "%x/%x/%x,", rtc.year, rtc.month, rtc.date);
 140   1          n = sprintf(buf+n, "%x:%x:%x\n", rtc.hour, rtc.min, rtc.sec);
 141   1          dLog(buf);
 142   1          // memset(&buf[0], 0, sizeof(buf));
 143   1          // n = sprintf(buf, "%02u/%02u/%02u,", year, month, day);
 144   1          // n = sprintf(buf+n, "%02u:%02u:%02u\n", hour, min, sec);
 145   1          // dLog(buf);
 146   1      }
 147          
 148          void main()
 149          {
 150   1          dInit();
 151   1          read_time();
 152   1          while (1) {
 153   2              if (year < 99) {
 154   3                  turn_off();
 155   3                  k1 = 0;
 156   3                  show_num(year / 10);
 157   3                  delay(5);
 158   3                  turn_off();
 159   3                  k2 = 0;
 160   3                  show_num(year % 10);
 161   3                  delay(5);
 162   3              } else {
 163   3                  turn_off();
 164   3                  k1 = 0;
 165   3                  show_num(0);
 166   3                  delay(5);
 167   3                  turn_off();
 168   3                  k2 = 0;
 169   3                  show_num(0);
 170   3                  delay(5);
 171   3              }
 172   2              if (month < 99) {
 173   3                  turn_off();
 174   3                  k3 = 0;
 175   3                  show_num(month / 10);
 176   3                  delay(5);
 177   3                  turn_off();
 178   3                  k4 = 0;
C51 COMPILER V9.56.0.0   LEDX4                                                             07/23/2017 09:59:33 PAGE 4   

 179   3                  show_num(month % 10);
 180   3                  delay(5);
 181   3              } else {
 182   3                  turn_off();
 183   3                  k3 = 0;
 184   3                  show_num(0);
 185   3                  delay(5);
 186   3                  turn_off();
 187   3                  k4 = 0;
 188   3                  show_num(0);
 189   3                  delay(5);
 190   3              }
 191   2          }
 192   1      }
 193          
 194          void main0()
 195          {
 196   1          turn_off();
 197   1          TMOD = 0;
 198   1          // 11.0592MHz - 45872
 199   1          TH0 = (65536 - 45872) / 256;
 200   1          TL0 = (65536 - 45872) % 256;
 201   1          EA = 1;
 202   1          ET0 = 1;
 203   1          TR0 = 1;
 204   1          while (1) {
 205   2              update_led();
 206   2          }
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    705    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       7
   IDATA SIZE       =     32    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
