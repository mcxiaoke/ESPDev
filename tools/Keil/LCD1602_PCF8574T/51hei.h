//51hei单片机开发板常用功能通用包含文件
//防止被重复定义引用
#ifndef __51hei_H__
#define __51hei_H__
sfr  AUXR = 0x8E;//扩展RAM管理及禁止ALE输出控制寄存器 (不可位寻址) 如调用AUXR=0x01;禁止ALE输出,降低辐射干扰
sbit hei_clk =P2^4;           //用P2^4模拟串口时钟
sbit hei_data=P2^5;          //用P2^5模拟串口数据
sbit duan_x=P2^6;     //74HC573的锁存LE端  U1  数码管的段选端
sbit wei_x =P2^7;     //74HC573的锁存LE端  U2  数码管的位选端
//-------------------------------------------------------------------------------------------------------
//  函数名称：out164
//  输入参数：k
//  输出参数：无
//  功能说明：8位同步移位寄存器74hc164，将k的数据从74hc164并行输出
//--------------------------------------------------------------------------------------------------------
void out164(unsigned char k) 
 { 
 unsigned char i;
  for(i=0;i<8;i++) //因为是1字节是8位，所以循环8次
  {
   hei_data=k&0x80; //将要发送的数据与上0X80(也就是取最高位)送到数据引脚上
   hei_clk=0; //时钟引脚加低电平,以便下次拉高便可产生上升沿
   hei_clk=1; //低电平到高电平边沿触发到来,并行数据输出至74hc164的Q0-Q7
   k<<=1;     //将发送的数据左移1位
  } 
}

//--关闭点阵输出,在每个程序的开头调用一下可防止点阵时不时出现几个亮条.
void guandz(void) 
{ 
out164(0x00);
}

//--让所有led不亮
void guanled(void) 
{ 
	P0=0x00;   //P0口全送高低平,让所有段都不亮
	duan_x=1;  //让u1 74hc573处于直通状态，也就是输入0，输出也是0，输入1输出也是1
	duan_x=0;  //锁存 也就是保持74hc573现在这个时刻的输出状态一直不变
   P0=0xFF;

	//P0=0xFF;   //P0口送高电平,也就是关闭所有数码管的位选
	//wei_x=1;  //让位选的这个u2 74hc573处于直通状态，也就是输入0，输出也是0，输入1输出也是1
	//wei_x=0;  //锁存 也就是保持74hc573现在这个时刻的输出状态一直不变
}


#endif
