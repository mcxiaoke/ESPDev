C51 COMPILER V9.56.0.0   LCD1602                                                           07/31/2017 21:11:36 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\l
                    -cd1602.lst) TABS(2) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          
   3          bit ack;
   4          unsigned char dat;
   5          unsigned char code digit[]={"0123456789"};
   6          
   7          void nop4()
   8          {
   9   1        _nop_();
  10   1        _nop_();
  11   1        _nop_();
  12   1        _nop_();
  13   1      }
  14          
  15          void delay_us(int i)//1ns
  16          {
  17   1          for(; i>0; i--)
  18   1            _nop_();
  19   1      }
  20          
  21          void delay_ms(int i)//1ms
  22          {
  23   1          unsigned char x,j;
  24   1          for(j=0;j<i;j++)
  25   1          for(x=0;x<=110;x++);
  26   1      }
  27          
  28          void i2c_start()
  29          {
  30   1        SDA = 1;
  31   1        _nop_();
  32   1        SCL = 1;
  33   1        nop4();
  34   1        SDA = 0;
  35   1        nop4();
  36   1        SCL = 0;
  37   1        _nop_();
  38   1        _nop_();
  39   1      }
  40          
  41          void i2c_stop()
  42          {
  43   1        SDA = 0;
  44   1        _nop_();
  45   1        SCL = 0;
  46   1        nop4();
  47   1        SCL = 1;
  48   1        nop4();
  49   1        SDA = 1;
  50   1        _nop_();
  51   1        _nop_();
  52   1      }
  53          
  54          void i2c_write(unsigned char c)
C51 COMPILER V9.56.0.0   LCD1602                                                           07/31/2017 21:11:36 PAGE 2   

  55          {
  56   1        unsigned char i;
  57   1        for(i=0;i<8;i++){
  58   2          if((c<<i)&0x80){
  59   3            SDA = 1;
  60   3          }else{
  61   3            SDA = 0;
  62   3          }
  63   2          _nop_();
  64   2          SCL = 1;
  65   2          nop4();
  66   2          _nop_();
  67   2          SCL = 0;
  68   2        }
  69   1        _nop_();
  70   1        _nop_();
  71   1        SDA = 1;
  72   1        _nop_();
  73   1        _nop_();
  74   1        SCL = 1;
  75   1        _nop_();
  76   1        _nop_();
  77   1        _nop_();
  78   1        if(SDA == 1){
  79   2         ack = 0;
  80   2        }else{
  81   2          ack = 1;
  82   2        }
  83   1        SCL = 0;
  84   1        _nop_();
  85   1        _nop_();
  86   1      }
  87          
  88          bit i2c_write_addr(unsigned char addr, unsigned char dat)
  89          {
  90   1        i2c_start();
  91   1        i2c_write(addr);
  92   1        if(ack==0){
  93   2          return 0;
  94   2        }
  95   1        i2c_write(dat);
  96   1        if(ack==0){
  97   2          return 0;
  98   2        }
  99   1        i2c_stop();
 100   1        return 1;  
 101   1      }
 102          
 103          void lcd_enable_write()
 104          {
 105   1        //unsigned char dat;
 106   1        dat |= (1<<(3-1));//E=1
 107   1        i2c_write_addr(0x40, dat);
 108   1        delay_us(2);
 109   1        dat &= ~(1<<(3-1));//E=0;
 110   1        i2c_write_addr(0x40, dat);
 111   1      }
 112          
 113          void lcd_write_cmd(unsigned char cmd)
 114          {
 115   1        //unsigned char dat;
 116   1        delay_us(16);
C51 COMPILER V9.56.0.0   LCD1602                                                           07/31/2017 21:11:36 PAGE 3   

 117   1        dat &= ~(1<<(1-1));//RS=0;
 118   1        dat &= ~(1<<(2-1));//RW=0;
 119   1        i2c_write_addr(0x40, dat);
 120   1        
 121   1        dat &= 0X0f; //clear high 4bit  
 122   1        dat |= cmd&0xf0; // write high 4bit 
 123   1        i2c_write_addr(0x40,dat); 
 124   1        lcd_enable_write();
 125   1        
 126   1        cmd=cmd<<4; //low -> high 4bit  
 127   1        dat &= 0x0f; // clear high 4bit  
 128   1        dat |= cmd&0xf0; // write low 4bit 
 129   1        i2c_write_addr(0x40,dat); 
 130   1        lcd_enable_write(); 
 131   1      }
 132          
 133          void lcd_write_data(unsigned char value)
 134          {
 135   1        //unsigned char dat;
 136   1        delay_us(16);
 137   1        dat|=(1<<(1-1));//RS=1;  
 138   1        dat&=~(1<<(2-1));//RW=0;  
 139   1        i2c_write_addr(0x40,dat);    
 140   1        dat&=0X0f; //clear high 4bit  
 141   1        dat|=value&0xf0; // write high 4bit  
 142   1        i2c_write_addr(0x40,dat); 
 143   1        lcd_enable_write();    
 144   1        
 145   1        value=value<<4; //low->high 4bit  
 146   1        dat&=0x0f; // clear high 4bit  
 147   1        dat|=value&0xf0; //write low 4bit  
 148   1        i2c_write_addr(0x40,dat); 
 149   1        lcd_enable_write();
 150   1      }
 151          
 152          void lcd_set_cursor(unsigned char x, unsigned char y)
 153          {
 154   1        unsigned char pos;
 155   1        if(y==0){
 156   2          pos = 0x80 + x;
 157   2        }else{
 158   2          pos = 0xc0 + x;
 159   2        }
 160   1        lcd_write_cmd(pos);
 161   1      }
 162          
 163          void lcd_init()
 164          {
 165   1        lcd_write_cmd(0x28);
 166   1        delay_us(40);
 167   1        lcd_write_cmd(0x28);
 168   1        delay_us(40);
 169   1        lcd_enable_write();
 170   1        delay_us(40);
 171   1        lcd_write_cmd(0x28);
 172   1        lcd_write_cmd(0x0c);
 173   1        lcd_write_cmd(0x01);
 174   1        delay_ms(2);
 175   1      }
 176          
 177          void lcd_display(unsigned char x, 
 178            unsigned char y, 
C51 COMPILER V9.56.0.0   LCD1602                                                           07/31/2017 21:11:36 PAGE 4   

 179              unsigned char* s)
 180          {
 181   1        lcd_set_cursor(x, y);
 182   1        while(*s){
 183   2          lcd_write_data(*s);
 184   2          s++;
 185   2        }
 186   1      }     
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
