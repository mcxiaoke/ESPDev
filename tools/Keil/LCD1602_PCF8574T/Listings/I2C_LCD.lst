C51 COMPILER V9.56.0.0   I2C_LCD                                                           08/02/2017 19:59:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2C_LCD
OBJECT MODULE PLACED IN .\Objects\I2C_LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C_LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\I
                    -2C_LCD.lst) TABS(2) OBJECT(.\Objects\I2C_LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include "I2C_LCD.h"
   3          
   4          void Delay10us(void) {
   5   1        //uint8_t i;
   6   1        /*
   7   1        for(i=0; i<150; ++i) {
   8   1          
   9   1        }
  10   1        */
  11   1      }
  12          
  13          void FlushVal(void) {
  14   1        uint8_t i;
  15   1        for(i=0; i<8; ++i) {
  16   2          u8LcdTmp>>=1;
  17   2          if(u8LCD_Buff[i]) {
  18   3            u8LcdTmp|=0x80;
  19   3          }
  20   2        }
  21   1        KT_I2C_Start();
  22   1        KT_I2C_Write(I2C_LCD_ADDR);
  23   1        KT_I2C_Write(u8LcdTmp);
  24   1        KT_I2C_Stop();
  25   1      }
  26          
  27          void KT_I2C_LCD_Init(void) {
  28   1        uint8_t i, j;
  29   1        
  30   1        for(i=0; i<100; ++i) {
  31   2          Delay10us();
  32   2          Delay10us();
  33   2          Delay10us();
  34   2          Delay10us();
  35   2          Delay10us();
  36   2          Delay10us();
  37   2          Delay10us();
  38   2          Delay10us();
  39   2          Delay10us();
  40   2        }
  41   1        
  42   1        KT_I2C_Init();
  43   1        
  44   1        for(i=0; i<8; ++i) {
  45   2          u8LCD_Buff[i]=0;
  46   2        }
  47   1        
  48   1        FlushVal();
  49   1        
  50   1        u8LCD_Buff[LCD_RS]=0;
  51   1        FlushVal();
  52   1        
  53   1        u8LCD_Buff[LCD_RW]=0;
  54   1        FlushVal();
C51 COMPILER V9.56.0.0   I2C_LCD                                                           08/02/2017 19:59:10 PAGE 2   

  55   1        
  56   1        LCD_Write_4bit(0x03);
  57   1        for(i=0; i<100; ++i) {
  58   2          for(j=0; j<40; ++j) {
  59   3            Delay10us();
  60   3            Delay10us();
  61   3            Delay10us();
  62   3            Delay10us();
  63   3            Delay10us();
  64   3            Delay10us();
  65   3            Delay10us();
  66   3            Delay10us();
  67   3            Delay10us();
  68   3          }
  69   2        }
  70   1        LCD_Write_4bit(0x03);
  71   1        for(i=0; i<10; ++i) {
  72   2          Delay10us();
  73   2          Delay10us();
  74   2          Delay10us();
  75   2          Delay10us();
  76   2          Delay10us();
  77   2          Delay10us();
  78   2          Delay10us();
  79   2          Delay10us();
  80   2          Delay10us();
  81   2        }
  82   1        LCD_Write_4bit(0x03);
  83   1        for(i=0; i<10; ++i) {
  84   2          Delay10us();
  85   2          Delay10us();
  86   2          Delay10us();
  87   2          Delay10us();
  88   2          Delay10us();
  89   2          Delay10us();
  90   2          Delay10us();
  91   2          Delay10us();
  92   2          Delay10us();
  93   2        }
  94   1        LCD_Write_4bit(MODE_4_BIT>>4);
  95   1        for(i=0; i<10; ++i) {
  96   2          Delay10us();
  97   2          Delay10us();
  98   2          Delay10us();
  99   2          Delay10us();
 100   2          Delay10us();
 101   2          Delay10us();
 102   2          Delay10us();
 103   2          Delay10us();
 104   2          Delay10us();
 105   2        }
 106   1        KT_I2C_LCD_WriteCmd(MODE_4_BIT);
 107   1        KT_I2C_LCD_WriteCmd(DISP_ON);
 108   1        KT_I2C_LCD_WriteCmd(CURSOR_ON);
 109   1        KT_I2C_LCD_WriteCmd(CLR_SCR);
 110   1      }
 111          
 112          void LCD_Write_4bit(uint8_t u8Data) {
 113   1        //4 bit can ghi chinh la 4 5 6 7
 114   1        //dau tien gan LCD_E=1
 115   1        //ghi du lieu
 116   1        //sau do gan LCD_E=0
C51 COMPILER V9.56.0.0   I2C_LCD                                                           08/02/2017 19:59:10 PAGE 3   

 117   1      
 118   1        if(u8Data&0x08) {
 119   2          u8LCD_Buff[LCD_D7]=1;
 120   2        } else {
 121   2          u8LCD_Buff[LCD_D7]=0;
 122   2        }
 123   1        if(u8Data&0x04) {
 124   2          u8LCD_Buff[LCD_D6]=1;
 125   2        } else {
 126   2          u8LCD_Buff[LCD_D6]=0;
 127   2        }
 128   1        if(u8Data&0x02) {
 129   2          u8LCD_Buff[LCD_D5]=1;
 130   2        } else {
 131   2          u8LCD_Buff[LCD_D5]=0;
 132   2        }
 133   1        if(u8Data&0x01) {
 134   2          u8LCD_Buff[LCD_D4]=1;
 135   2        } else {
 136   2          u8LCD_Buff[LCD_D4]=0;
 137   2        }
 138   1        
 139   1        u8LCD_Buff[LCD_EN]=1;
 140   1        FlushVal(); 
 141   1        
 142   1        u8LCD_Buff[LCD_EN]=0;
 143   1        FlushVal();
 144   1        
 145   1      }
 146          
 147          void LCD_WaitBusy(void) {
 148   1        char temp;
 149   1        
 150   1        //dau tien ghi tat ca 4 bit thap bang 1
 151   1        u8LCD_Buff[LCD_D4]=u8LCD_Buff[LCD_D5]=u8LCD_Buff[LCD_D6]=u8LCD_Buff[LCD_D7]=1;
 152   1        FlushVal();
 153   1        
 154   1        u8LCD_Buff[LCD_RS]=0;
 155   1        FlushVal();
 156   1        
 157   1        u8LCD_Buff[LCD_RW]=1;
 158   1        FlushVal();
 159   1        do {
 160   2          u8LCD_Buff[LCD_EN]=1;
 161   2          FlushVal();
 162   2          KT_I2C_Start();
 163   2          KT_I2C_Write(I2C_LCD_ADDR+1);
 164   2          temp=KT_I2C_Read(1);
 165   2          KT_I2C_Stop();
 166   2          
 167   2          u8LCD_Buff[LCD_EN]=0;
 168   2          FlushVal();
 169   2          u8LCD_Buff[LCD_EN]=1;
 170   2          FlushVal();
 171   2          u8LCD_Buff[LCD_EN]=0;
 172   2          FlushVal();
 173   2        }while (temp&0x08);
 174   1      }
 175          
 176          void KT_I2C_LCD_WriteCmd(uint8_t u8Cmd) {
 177   1        
 178   1        LCD_WaitBusy();
C51 COMPILER V9.56.0.0   I2C_LCD                                                           08/02/2017 19:59:10 PAGE 4   

 179   1      
 180   1        u8LCD_Buff[LCD_RS]=0;
 181   1        FlushVal();
 182   1        
 183   1        u8LCD_Buff[LCD_RW]=0;
 184   1        FlushVal();
 185   1        
 186   1        LCD_Write_4bit(u8Cmd>>4);
 187   1        LCD_Write_4bit(u8Cmd);
 188   1      }
 189          
 190          void LCD_Write_Chr(char chr){
 191   1        
 192   1        LCD_WaitBusy();
 193   1        u8LCD_Buff[LCD_RS]=1;
 194   1        FlushVal();
 195   1        u8LCD_Buff[LCD_RW]=0;
 196   1        FlushVal();
 197   1        LCD_Write_4bit(chr>>4);
 198   1        LCD_Write_4bit(chr);
 199   1        
 200   1      }
 201          
 202          void KT_I2C_LCD_Puts(char *sz) {
 203   1        while(1) {
 204   2          if(*sz) {
 205   3            LCD_Write_Chr(*sz++);
 206   3          } else {
 207   3            break;
 208   3          }
 209   2        }
 210   1      }
 211          
 212          void KT_I2C_LCD_Clear(void) {
 213   1        KT_I2C_LCD_WriteCmd(CLR_SCR);
 214   1      }
 215          
 216          void KT_I2C_LCD_NewLine(void) {
 217   1        KT_I2C_LCD_WriteCmd(0xc0);
 218   1      }
 219          
 220          void KT_I2C_LCD_BackLight(uint8_t u8BackLight) {
 221   1        if(u8BackLight) {
 222   2          u8LCD_Buff[LCD_BL]=1;
 223   2        } else {
 224   2          u8LCD_Buff[LCD_BL]=0;
 225   2        }
 226   1        FlushVal();
 227   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    440    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
